/* config.h.in.  Generated from configure.ac by autoheader.  */

/* mist-system/kernel target architecture. */
#undef ARCH

/* Define to 1 for ARM targets. */
#undef ARCH_ARM

/* Define to 1 for ARM1176JF_S targets. */
#undef ARCH_ARM_ARM1176JZF_S

/* Define to 1 for ARM Cortex-A53 targets. */
#undef ARCH_ARM_CORTEX_A53

/* Define to 1 for ARM Cortex-A7 targets. */
#undef ARCH_ARM_CORTEX_A7

/* Define to 1 for ARM Cortex-A8 targets. */
#undef ARCH_ARM_CORTEX_A8

/* Define to 1 for ARMv7 targets. */
#undef ARCH_ARM_V6

/* Define to 1 for ARMv7 targets. */
#undef ARCH_ARM_V7

/* Define to 1 for ARMv8 targets. */
#undef ARCH_ARM_V8

/* Set to 1 to enable debug mode. */
#undef DEBUG

/* Define to 1 for 32 bit ELF targets. */
#undef ELF32

/* Define to 1 for 64 bit ELF targets. */
#undef ELF64

/* Define set for libc to compile differently. */
#undef IS_KERNEL

/* Set to 1 to enable kernel output mode. */
#undef KERNEL_DEBUG_PRINT

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Keyword for packing structures. */
#undef PACKED

/* Define to 1 for beagleboard platform */
#undef PLATFORM_BEAGLEBOARD

/* Define to 1 for n900 platform */
#undef PLATFORM_N8X0

/* Define to 1 for n900 platform */
#undef PLATFORM_N900

/* Define to 1 for raspberry pi 1 A platform. */
#undef PLATFORM_RPI1_A

/* Define to 1 for raspberry pi 1 A+ platform. */
#undef PLATFORM_RPI1_A_PLUS

/* Define to 1 for raspberry pi 1 B platform. */
#undef PLATFORM_RPI1_B

/* Define to 1 for raspberry pi 1 B+ platform. */
#undef PLATFORM_RPI1_B_PLUS

/* Define to 1 for raspberry pi 2 B platform */
#undef PLATFORM_RPI2_B

/* Define to 1 for raspberry pi 2 B rev. 2 platform */
#undef PLATFORM_RPI2_B_REV2

/* Define to 1 for raspberry pi 3 B platform */
#undef PLATFORM_RPI3_B

/* Define to 1 for raspberry pi 3 B+ platform */
#undef PLATFORM_RPI3_B_PLUS

/* Define to 1 for raspberry pi 1 platform. */
#undef PLATFORM_RPI_ZERO

/* Define to 1 for raspberry pi zero platform. */
#undef PLATFORM_RPI_ZERO_W

/* Keyword for section placement. */
#undef SECTION

/* mist-system/kernel target subarchitecture. */
#undef SUBARCH

/* mist-system/kernel target vendor. */
#undef VENDOR

/* Define to 1 for beagleboard vendor. */
#undef VENDOR_BEAGLEBOARD

/* Define to 1 for n900 vendor. */
#undef VENDOR_N8X0

/* Define to 1 for n900 vendor. */
#undef VENDOR_N900

/* Define to 1 for raspberry pi vendor. */
#undef VENDOR_RPI

/* Version number of package */
#undef VERSION

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile
