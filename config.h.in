/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Keyword for alignment. */
#undef ALIGNED

/* bolthur/kernel target architecture */
#undef ARCH

/* Define to 1 for ARM targets */
#undef ARCH_ARM

/* Define to 1 for ARM ARM1176JZF-S targets */
#undef ARCH_ARM_ARM1176JZF_S

/* Define to 1 for ARM Cortex-A53 targets */
#undef ARCH_ARM_CORTEX_A53

/* Define to 1 for ARM Cortex-A7 targets */
#undef ARCH_ARM_CORTEX_A7

/* Define to 1 for ARMv6 targets */
#undef ARCH_ARM_V6

/* Define to 1 for ARMv7 targets */
#undef ARCH_ARM_V7

/* Define to 1 for ARMv8 targets */
#undef ARCH_ARM_V8

/* Indicator for virtualization extension of ARM */
#undef ARM_VIRTUALIZATION_EXTENSION

/* Define to 1 for BCM2708 chip */
#undef BCM2708

/* Define to 1 for BCM2709 chip */
#undef BCM2709

/* Define to 1 for BCM2710 chip */
#undef BCM2710

/* Set to 1 to enable debug mode */
#undef DEBUG

/* Define to 1 for 32 bit ELF targets */
#undef ELF32

/* Define to 1 for 64 bit ELF targets */
#undef ELF64

/* Define to 1 for host with hardware FPU */
#undef FPU_ENABLED

/* Define to 1 when kernel is higher half */
#undef IS_HIGHER_HALF

/* Define set for libc to compile differently */
#undef IS_KERNEL

/* Define contains max physical memory per vendor */
#undef MAX_PHYSICAL_MEMORY

/* Disable optimization */
#undef OPT_NONE

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Keyword for packing structures. */
#undef PACKED

/* Keyword for packing and aligning structures. */
#undef PACKED_ALIGNED

/* Define to 1 to enable output of mailbox */
#undef PRINT_MAILBOX

/* Define to 1 to enable output of kernel heap */
#undef PRINT_MM_HEAP

/* Define to 1 to enable output of physical memory manager */
#undef PRINT_MM_PHYS

/* Define to 1 to enable output of virtual memory manager */
#undef PRINT_MM_VIRT

/* Keyword for section placement. */
#undef SECTION

/* Define to amount of smp cores */
#undef SMP_CORE_NUMBER

/* Define to 1 for SMP capable hosts */
#undef SMP_ENABLED

/* bolthur/kernel target subarchitecture */
#undef SUBARCH

/* Define to 1 to enable kernel print */
#undef TTY_ENABLE

/* Define to 1 for output via framebuffer */
#undef TTY_FRAMEBUFFER

/* Define to 1 for output via serial */
#undef TTY_SERIAL

/* bolthur/kernel target vendor */
#undef VENDOR

/* Define to 1 for raspberry pi vendor */
#undef VENDOR_RPI

/* Version number of package */
#undef VERSION

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile
